/*!
*
* Bulletin
* Copyright (c) 2021 Karl Saunders (Mobius1)
* Licensed under MIT (http://www.opensource.org/licenses/mit-license.php)
*
* Version: 1.0.0
*
*/
const BulletinContainers={};let MaxQueue=5,styled=!1;class NotificationContainer{constructor(t){this.container=document.getElementById("bulletin_container"),this.el=document.createElement("div"),this.el.classList.add("bulletin-notification-container",`notification-container-${t}`),this.notifications=[],this.offset=0,this.running=!1,this.spacing=10,this.queue=0,this.maxQueue=MaxQueue,this.canAdd=!0}addNotification(t){this.queue++,this.el.appendChild(t.el),this.notifications.unshift(t),this.queue>=this.maxQueue&&(this.canAdd=!1)}removeNotification(t){this.el.removeChild(t.el);const i=this.notifications.indexOf(t);i>-1&&this.notifications.splice(i,1),this.queue--,0==this.queue&&(this.canAdd=!0)}add(){this.container.contains(this.el)||this.container.appendChild(this.el)}remove(){this.container.removeChild(this.el)}empty(){return this.el.children.length<1}}class Notification{show(){if(this.bottom=this.position.includes("bottom"),this.position in BulletinContainers?this.container=BulletinContainers[this.position]:(this.container=new NotificationContainer(this.position),BulletinContainers[this.position]=this.container),!this.container.running&&this.container.canAdd){this.container.add(),this.container.addNotification(this),this.el.classList.add("active"),this.bottom?this.el.style.bottom=`${this.container.offset}px`:this.el.style.top=`${this.container.offset}px`,this.progress&&(this.barEl.style.animationDuration=`${this.interval}ms`);const t=this.el.getBoundingClientRect();for(const i of this.container.notifications)i!=this&&(this.bottom?i.moveUp(t.height,!0):i.moveDown(t.height,!0));setTimeout((()=>{this.el.classList.remove("active"),this.el.classList.add("hiding"),setTimeout((()=>{const i=this.container.notifications.indexOf(this);for(var s=this.container.notifications.length-1;s>i;s--){const i=this.container.notifications[s];this.bottom?i.moveDown(t.height):i.moveUp(t.height)}setTimeout((()=>{this.container.removeNotification(this)}),100)}),this.cfg.AnimationTime)}),this.interval)}else setTimeout((()=>{this.show()}),250)}moveUp(t,i=!1){const s=t+this.container.spacing;this.bottom?this.offset+=s:this.offset-=s,this.el.style.transition="transform 250ms ease 0ms",this.el.style.transform=`translate3d(0px, ${-s}px, 0px)`,this.container.running=i,setTimeout((()=>{i&&(this.container.running=!1),this.el.style.transition="",this.el.style.transform="",this.bottom?this.el.style.bottom=`${this.container.offset+this.offset}px`:this.el.style.top=`${this.container.offset+this.offset}px`}),250)}moveDown(t,i=!1){const s=t+this.container.spacing;this.bottom?this.offset-=s:this.offset+=s,this.el.style.transition="transform 250ms ease 0ms",this.el.style.transform=`translate3d(0px, ${s}px, 0px)`,this.container.running=i,setTimeout((()=>{i&&(this.container.running=!1),this.el.style.transition="",this.el.style.transform="",this.bottom?this.el.style.bottom=`${this.container.offset+this.offset}px`:this.el.style.top=`${this.container.offset+this.offset}px`}),250)}parseMessage(t,i=4){return t=(t=(t=(t=t.replace(/~([^h])~([^~]+)/g,"<span class='$1'>$2</span>")).replace(/~([h])~([^~]+)/g,"<span class='$1'>$2</span>")).replace(/~s~/g,"")).replace(/\n/g,"<br />")}}class StandardNotification extends Notification{constructor(t,i,s,e,n=!1,o="default"){super(),this.cfg=t,this.message=i,this.interval=s,this.position=e,this.message=i,this.progress=n,this.offset=0,this.theme=o,this.init()}init(){this.el=document.createElement("div"),this.el.classList.add("bulletin-notification"),this.message=this.parseMessage(this.message),this.el.innerHTML=this.message,this.theme&&this.el.classList.add(this.theme),this.progress&&(this.el.classList.add("with-progress"),this.progressEl=document.createElement("div"),this.progressEl.classList.add("notification-progress"),this.barEl=document.createElement("div"),this.barEl.classList.add("notification-bar"),this.progressEl.appendChild(this.barEl),this.el.appendChild(this.progressEl))}}class AdvancedNotification extends Notification{constructor(t,i,s,e,n,o,a,h=!1,l="default"){super(),this.cfg=t,this.message=i,this.interval=o,this.position=a,this.title=s,this.subject=e,this.message=i,this.icon=n,this.progress=h,this.offset=0,this.theme=l,this.init()}init(){this.title=this.parseMessage(this.title),this.subject=this.parseMessage(this.subject),this.message=this.parseMessage(this.message),this.el=document.createElement("div"),this.el.classList.add("bulletin-notification"),this.theme&&this.el.classList.add(this.theme),this.headerEl=document.createElement("div"),this.headerEl.classList.add("notification-header"),this.iconEl=document.createElement("div"),this.iconEl.classList.add("notification-icon"),this.titleEl=document.createElement("div"),this.titleEl.classList.add("notification-title"),this.subjectEl=document.createElement("div"),this.subjectEl.classList.add("notification-subject"),this.messageEl=document.createElement("div"),this.messageEl.classList.add("notification-message"),this.iconEl.innerHTML=`<img src="images/${this.icon}" />`,this.titleEl.innerHTML=this.title,this.subjectEl.innerHTML=this.subject,this.messageEl.innerHTML=this.message,this.headerEl.appendChild(this.iconEl),this.headerEl.appendChild(this.titleEl),this.headerEl.appendChild(this.subjectEl),this.el.appendChild(this.headerEl),this.el.appendChild(this.messageEl),this.progress&&(this.el.classList.add("with-progress"),this.progressEl=document.createElement("div"),this.progressEl.classList.add("notification-progress"),this.barEl=document.createElement("div"),this.barEl.classList.add("notification-bar"),this.progressEl.appendChild(this.barEl),this.el.appendChild(this.progressEl))}}const onData=function(t){const i=t.data;if(i.type){if(!styled){const t=`\n .bulletin-notification.active {\n opacity: 0;\n animation: fadeIn ${i.config.AnimationTime}ms ease 0ms forwards;\n }\n \n .bulletin-notification.hiding {\n opacity: 1;\n animation: ${i.config.AnimationOut} ${i.config.AnimationTime}ms ease 0ms forwards;\n }`;document.head.insertAdjacentHTML("beforeend",`<style>${t}</style>`),styled=!0}MaxQueue=i.config.Queue,"standard"==i.type?new StandardNotification(i.config,i.message,i.timeout,i.position,i.progress,i.theme).show():new AdvancedNotification(i.config,i.message,i.title,i.subject,i.icon,i.timeout,i.position,i.progress,i.theme).show()}};window.onload=function(t){window.addEventListener("message",onData)};